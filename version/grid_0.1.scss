$font-size: 14px; //размер шрифта
$line-height:20px; //средняя линия шрифта
$base-width:1170px; //базовая ширина макета
$columns:12; //количество колонок
$display_md:1200px; //(1100 || 1200)до - средний экран, свяше - большой
$display_sm:992px; //(780 || 992)до - малый
$display_xs:560px; //(560 || 768) до - очень малый
$margin_offset:15px; //отступы колонок
$box-sizing:border-box;//размеры блоков
body{
	font-size: $font-size;
	line-height: $line-height;
}
//сброс стилей
@mixin reset(){
    body,div,dl,dt,dd,ul,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,input,textarea,p,blockquote,th,td{
        margin: 0;
        padding: 0;
    }
    table{
        border-collapse: collapse;
        border-spacing: 0;
    }
    fieldset,img,abbr{
        border: 0;
    }
    address,caption,cite,code,dfn,em,strong,th,var{
        font-style: normal;
        font-weight: normal;
    }
    ul li{
        list-style: none;
    }
    caption,th{
        text-align: left;
    }
    h1,h2,h3,h4,h5,h6{
        font-size: 100%;
        font-weight: normal;
    }
    sup{
        vertical-align: text-top;
    }
    sub{
        vertical-align: text-bottom;
    }
    input,textarea,select{
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
    }
    legend{
        color: #000;
    }
    article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section,main{
        display: block;
    }
    img{
        max-width: 100%;
        height: auto;
    }
}
//обертка задает максимальную ширину макета и отступы паддинги
@mixin wrapper ($base-width:$base-width, $box-sizing:border-box){
	max-width: $base-width;
	margin: 0 auto;
	padding: 0 15px;
	box-sizing: $box-sizing;
	@content;
}
//внутренние обертки под флексы с отрицательными маргинами
@mixin row-flex{
	display: flex;
	flex-wrap: wrap;
	margin: 0 #{-$margin_offset};
	@content;
}
//внутренняя обертка для вертикального флекса
@mixin col-flex{
	display: flex;
	flex-direction: column;
	margin: 0 #{-$margin_offset};
}
//модуль с стандартными параметрами (отступы)
@mixin module-prop($margin_offset:$margin_offset){
	box-sizing: border-box;
    margin-left: $margin_offset;
    margin-right: $margin_offset;
    word-wrap: break-word;
}
//размеры элементов на флекс-базисах @include fmod(lg, 4) || @include fmod(lg, 3, 9, 30px)
//(размер экрана(lg||md||sm||xs); необх. кол-во колонок, кол-во колонок макета(необяз.); размер отступа(необяз.))
@mixin fmod($display_size, $i, $cols:$columns, $margin_offset:$margin_offset){ //генератор свойств
	@if $cols == 0 {$cols:$columns}
	@if $margin_offset == 0 {$margin_offset:0px}
	$med:null;
	$size:null;
		@if $display_size == lg {$med:min-width; $size:$display_md}
		@if $display_size == md {$med:max-width; $size:$display_md}
		@if $display_size == sm {$med:max-width; $size:$display_sm}
		@if $display_size == xs {$med:max-width; $size:$display_xs}
		@media screen and ($med:$size){
			@include module-prop($margin_offset);
			$w:(#{$i * 100 / $cols}) + '%';
			$m_off:$margin_offset*2;
			// width: calc(#{$w} - #{$m_off});
			flex-basis: calc(#{$w} - #{$m_off});
		}
	@content;
}
//размеры элементов на width @include fmod(lg, 4) || @include fmod(lg, 3, 9, 30px)
//(размер экрана(lg||md||sm||xs); необх. кол-во колонок, кол-во колонок макета(необяз.); размер отступа(необяз.))
@mixin wmod($display_size, $i, $cols:$columns, $margin_offset:$margin_offset){ //генератор свойств
	@if $cols == 0 {$cols:$columns}
	@if $margin_offset == 0 {$margin_offset:0px}
	$med:null;
	$size:null;
		@if $display_size == lg {$med:min-width; $size:$display_md}
		@if $display_size == md {$med:max-width; $size:$display_md}
		@if $display_size == sm {$med:max-width; $size:$display_sm}
		@if $display_size == xs {$med:max-width; $size:$display_xs}
		@media screen and ($med:$size){
			@include module-prop($margin_offset);
			$w:(#{$i * 100 / $cols}) + '%';
			$m_off:$margin_offset*2;
			width: calc(#{$w} - #{$m_off});
			// flex-basis: calc(#{$w} - #{$m_off});
		}
	@content;
}
//отступы margin @include fmod(left, lg, 4) || @include fmod(left, lg, 3, 9, 30px)
//(направленеи отступа(left||right); размер экрана(lg||md||sm||xs); необх. кол-во колонок, кол-во колонок макета(необяз.); размер отступа(необяз.))
@mixin offset-margin($direction, $display_size, $i, $cols:$columns, $margin_offset:$margin_offset){
	@if $cols == 0 {$cols:$columns}
	@if $margin_offset == 0 {$margin_offset:0px}
	$med:null;
	$size:null;
		@if $display_size == lg {$med:min-width; $size:$display_md}
		@if $display_size == md {$med:max-width; $size:$display_md}
		@if $display_size == sm {$med:max-width; $size:$display_sm}
		@if $display_size == xs {$med:max-width; $size:$display_xs}
		@media screen and ($med:$size){
			$w:(#{$i * 100 / $cols}) + '%';
	$margin:null;
		@if $direction == right {$margin:margin-right}
		@if $direction == left {$margin:margin-left}
			#{$margin}: calc(#{$w} + #{$margin_offset});

		}
	@content;
}
//отступы padding @include fmod(left, lg, 4) || @include fmod(left, lg, 3, 9, 30px)
//(направленеи отступа(left||right); размер экрана(lg||md||sm||xs); необх. кол-во колонок, кол-во колонок макета(необяз.); размер отступа(необяз.))
@mixin offset-padding($direction, $display_size, $i, $cols:$columns, $margin_offset:$margin_offset){
	@if $cols == 0 {$cols:$columns}
	@if $margin_offset == 0 {$margin_offset:0px}
	$med:null;
	$size:null;
		@if $display_size == lg {$med:min-width; $size:$display_md}
		@if $display_size == md {$med:max-width; $size:$display_md}
		@if $display_size == sm {$med:max-width; $size:$display_sm}
		@if $display_size == xs {$med:max-width; $size:$display_xs}
		@media screen and ($med:$size){
			$w:(#{$i * 100 / $cols}) + '%';
	$padding:null;
		@if $direction == right {$padding:padding-right}
		@if $direction == left {$padding:padding-left}
			#{$padding}: calc(#{$w} + #{$margin_offset});
		}
	@content;
}
// @mixin generator-col{ //генератор всей сетки
// 	$med:null;
// 	$size:null;
// 	@each $display_size in -lg-, -md-, -sm-, -xs-{
// 		@if $display_size == -lg- {$med:min-width; $size:$display_md}
// 		@if $display_size == -md- {$med:max-width; $size:$display_md}
// 		@if $display_size == -sm- {$med:max-width; $size:$display_sm}
// 		@if $display_size == -xs- {$med:max-width; $size:$display_xs}
// 		@media screen and ($med:$size){
// 			@for $i from 1 through 12{
// 				&#{$display_size}#{$i}{
// 					@include module-prop;
// 					$w:(#{$i * 100 / 12}) + '%';
// 					width: calc(#{$w} - 30px);
// 				}
// 			}
// 		}
// 	}
// }
// @mixin generator-mod($display_size, $i){ //генератор классов и свойств
// 	$med:null;
// 	$size:null;
// 		@if $display_size == -lg- {$med:min-width; $size:$display_md}
// 		@if $display_size == -md- {$med:max-width; $size:$display_md}
// 		@if $display_size == -sm- {$med:max-width; $size:$display_sm}
// 		@if $display_size == -xs- {$med:max-width; $size:$display_xs}
// 		@media screen and ($med:$size){
// 			&#{$display_size}#{$i}{
// 				@include module-prop;
// 				$w:(#{$i * 100 / 12}) + '%';
// 				width: calc(#{$w} - 30px);
// 			}
// 		}
	
// }